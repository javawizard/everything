package org.opengroove.g4.common.utils;

import java.util.concurrent.atomic.AtomicLong;

public class ProtocolUtils
{
    
    private static AtomicLong uniqueNumberSequencer = new AtomicLong();
    
    /**
     * Generates a unique id. It is guaranteed that the id returned will only
     * contain numbers. It is also guaranteed that the id returned will never be
     * generated again by this method until at least A.D. 2100. It is also
     * guaranteed that, were the output of this method to be padded with
     * trailing zeros to 30 characters, the numbers generated by this method
     * would be chronologically sequential, even if multiple numbers are
     * generated per millisecond.
     * 
     * @return
     */
    public static String generateId()
    {
        return ("" + System.currentTimeMillis())
            + ("" + uniqueNumberSequencer.getAndIncrement());
    }
}
