Revised the commit structure yet again. I'm thinking that commits will probably each be entirely contained within a tar.gz file. Each one would have a script that does all of the actions for that commit. When a revision is to be applied, the relevant tar.gz file will be extracted into something like tmp/current, and the script will then be run. That folder will then be deleted, the next tar.gz extracted, etc. This will also allow for a "checkpoints" folder, which contains a snapshot of the wc at a certain revision. That way, if the user chooses to frequently make checkpoints, then the checkpoint and all revisions after need to be applied, instead of every single revision. The user can use "ptm configure" to set how frequently checkpoints are created, and "ptm checkpoint" to manually create one. Checkpoints are in the checkpoints folder and are named after the revision that they represent. Their contents has the special newline encoding (with 01, 02, and 03), so they aren't exactly a copy of that revision.