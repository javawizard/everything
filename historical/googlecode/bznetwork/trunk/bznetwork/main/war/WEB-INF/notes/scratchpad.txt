This file is used for random notes that I write down when I'm trying to think about how to do something in BZNetwork.

Support for help files and bad words files should be somewhat generic, IE there should be a mechanism to easily extend that in the future to allow for other file types. Both help pages and bad words files use the same type of mechanism, IE they are specified on groups and on servers, and servers can specify whether or not they inherit the files specified on the group. It gets somewhat complex when we consider that both of them are different in both structure and inheritance mechanism. With bad words files, the gropu has one and the sever has one, and if the server chooses to inherit its group's bad words file then they just get concatenated together. With help files, the group and the server both have a list of help files, and the server can inherit the group's help files, but if there are two help files with a conflicting name then the server's help file overrides the group's help file. But then it would probably be good if the group could be set to have some certain help files that can't be overridden by the server, and a certain permission would have to be granted to a user to allow them to remove the lock on those help files. This would be useful when a person is running a network with BZNetwork, and they want to allow another user access to the network to the extent that the user can create servers under a specified group, but the network administrator wants a help file documenting information about the network itself to be included in all servers regardless of whether the server owner tried to override it.

Bad words files would need to have a similar, anti-override mechanism (so that a server network could enforce that a particular server use at a minimum a certain list of bad words, this would also require enforcing of -filterCallsigns and -filterChat), but theirs differs in that what's being overriden is whether or not the server can opt out of inheriting the group's bad words file. Help files would also need to have this option available.

From that perspective, both ideas are different. Maybe there should be a generic solution for single files, and a generic solution for multiple named files.

Anyway, let's write some notes on the IRC bot system.

The IRC bot system is designed so that a bot with a particular name can connect to multiple channels. I don't exactly know where this will come in useful yet, as most server networks have their own dedicated channel (as opposed to multiple channels), so you generally wouldn't ever have a situation in which you would want a bot with the same nickname to join multiple channels. But I'm assuming that it could happen, and I'm planning for that.

A list of irc bots can be created. Each bot has associated with it the server that it will connect to, the port number of that server, the bot's nickname on that server, and optionally it's password. I'm thinking that in the future I'll add to that a list of channels that the bot is restricted to. This could come in useful for users that are allowed to edit a bot's messages but not to create or change that bot in any other way (for example, if bznetwork were to offer hosting to other people), so that those people wouldn't be able to get the bot to join a channel other than their server network channel, which  might cause bznetwork to receive some blame as the source of spamming or something. So the bznetwork server administrator could configure the bot to be restricted to just a particular channel, or a set of channels, and no-one would be allowed to add messages that send to channels that are not listed in that list of channels.

Messages for an irc bot are highly customizable. You add messages to an irc bot by specifying which but you want to add messages to, a particular log event which will trigger the message (in the future, I'll also add support for action events to trigger irc bots, so that, for example, a message could be logged if someone kicks another user out of the system), a target that the event must occur on (this can be either a server, a groupo, or -1 for global, and specifies where events must come from in order for that message to cause anything to be issued), the channel that the message is supposed to be sent to, and the message to send (which can include %something% strings which will match certain event data. Pretty much all of these correspond to columns in the database logevents table, with various formatting applied, but I'm also thinking that all of the Logs screen columns should be included as well in some form or other, probably with HTML formatting removed as it would be relatively pointless in an irc message (although irc message color formatting might be something to consider in the future).