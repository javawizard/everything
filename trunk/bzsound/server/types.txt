This is the list of packet types. The number at the beginning is the decimal value that is assigned to that packet type. 



01 - client hello

This packet is the first one sent once communication with the server has been established, and is sent by the client. It contains the string "bzsound/1.0", followed by a newline. This allows the server to distinguish a bzsound client from an http client, and therefore potentially serve http resources over the same port in the future. 



02 - server hello

This packet is sent in response to the client's client hello packet. It contains the string "bzsound/1.0", but without a newline at the end. This is always the second packet sent.



20 - client voice update

This packet contains actual audio data from the client. The first byte is the number of samples per second the data was captured at, in khz. This should either be 8 or 16 for now. The second byte is the number of bytes for each sample. This should either be 1 or 2 for now. Every byte after that is sample data. If there are two bytes per sample, then the first byte after that is the high-order byte for the first sample, the second byte after that is the low-order byte for the frist sample, and so on. Clients must divide any given second into 8 slices, and send one packet per slice. Sampling at 8khz and at 1 byte per sample, then, would result in 1KB packets being sent. 4KB packets would be sent for 16khz and 2 bytes per sample.



21 - server voice update

This packet contains actual audio data from the server. The first byte is the number of samples per second that the data represents. The server will scale the sample rate delivered to the client as necessary if the client is losing data. The second byte is the number of bytes per sample. The third byte is the number of people that contributed audio to the sample in question. The rest of the bytes are actual data.

30 - client voice receipt

This packet tells the server that a voice packet has been received by the client.












