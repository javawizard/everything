This document describes a new server architecture, and a new protocol for OpenGroove. It supersedes and obsoletes newcommarch.txt.

All documents, unless otherwise specified, are relative to http://opengroove.svn.sf.net/svnroot/opengroove/client/main/trunk/.

I was thinking over the server architecture that I was writing in newcommarch.txt, and started thinking about how much storage space I would allow each user. A user's storage space would be used to store outbound messages while the recipient was downloading them, and to store a user's changes to a workspace for some time, until the other participants in the workspace had downloaded those changes. Then I started to realize that different user need different permissions...

There are 6 types of nodes: management servers, realm servers, clients, main servers, data servers, and data management servers. In order to make a complete system that will function by itself, only two of these node types are required: clients and a realm server. A realm server may or may not (the implementation included with OpenGroove can but does not by default) use data management and data servers. If the (there is usually only one) management server goes down, new clients that wish to register but don't know of any realm servers will not be able to do so, but existing users will still be able to communicate. If a realm server goes down, users of that realm server will generally not be able to connect, but users of other realm servers will be unaffected.

In the OpenGroove server system, there is one management server. It's job is to manage all of the realm servers, and provide means of allowing the realm servers to authenticate each other.

Realms are a concept of a provider that a user can register with. A user's userid within OpenGroove consists of the id of the realm that the user is registered with, two colons, and a user-chosen username. For example, if user javawizard2539 has registered with realm trivergia.com:63741, then javawizard2539's user id would be trivergia.com:64731::javawizard2539 . The management server maintains a list of realms and their corresponding public security keys.

the first thing sent by the connecting entity in any opengroove connection, be it from a client to a server or from a server to another server, is the word OpenGroove (case insensitive, but the capitalization just previously used is recommended), followed by a newline. In the OpenGroove protocol, a newline can be either a carriage return, a line feed, or a carriage return and a line feed, all of them work, and all entities should be prepared to handle all of those.

Here are the ports used by OpenGroove and their uses:

63745/TCP: Client to Realm Server and Realm Server to Realm Server
63746/TCP: Client to Management Server
63747/TCP: Realm server to Management Server
63748/TCP: Client to Client
63749/UDP: Client multicast, used for finding clients on the same network

When a realm server starts up, it loads up it's database, and starts up a web server. 




TODO: registering realm servers with management server, main servers for a realm server, 2 default realm servers (OpenGroove with 100M and 500 user cap, maybe more with aerospace10 hosting storage, open registration subjected to captcha, Trivergia with something like 5GB and private registration, and a 10 user cap, for people who work for Trivergia, such as me, matt, mark, mike, and isaac), custom url handler for sending a message to an opengroove user (for example, a web page about me could contain a link to send me a message and the url would be opengroovemessage://trivergia.com:64731/javawizard?subject=Hi+Alex