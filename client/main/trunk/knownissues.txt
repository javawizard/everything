SOME OF THE ITEMS ON THIS LIST MAY ALREADY HAVE BEEN RESOLVED. THIS LIST IS A BIT OUT OF DATE.

items with a * have been solved already



CLIENT ISSUES:

server latency does not persist accross multiple invocations of Convergia
workspaces are not shutdown()ed when Convergia exits
when offline, requesting to update user lists does not call any listener methods (maybe this should be this way)
in short, offline use needs considerable work
when a workspace is deleted, it's file store is not deleted, it still exists
when a tool is deleted, it's file store is not deleted, it still exists
usernames cannot have spaces, commas, or pipes, otherwise protocol erros will occur. they should at least be allowed to contain spaces
plugins cannot depend on one another (they are currently loaded using separate class loaders)
if Convergia crashes while installing new updates, the system is left unstable, and users must re-install Convergia.
when new updates are found for Convergia, they are automatically downloaded and installed. the user is not asked to confirm the action.
a few dialogs do not have cancel buttons, and the only way to cancel is to kill Convergia.
when the user goes offline and then goes back online, the communicator connects to the server it last connected to. this needs
	to be changed so that it connects to the one that was specified to it. for example, let's say that the server passed to the communicator
	is www.example.com. it would connect to it. then let's say that www.example.com sent a redirect to www.anotherexample.com.
	the server would then connect to www.anotherexample.com. now let's say the user went offline. when they come
	back online, the server will try to connect to www.anotherexample.com instead of connecting to www.example.com like it should.
*if new updates for Convergia are found, Convergia will repeatedly download them every 15 minutes until the user restarts
	Convergia, even though there is already a local copy of the updates.
Users could send an infinite amount of workspace invites to another user, thereby freezing their computer
when the user accepts or rejects a workspace, the invite-sending user is not notified of this
*when you accept a workspace invite, the invite window is not hidden
*when you delete a tool workspace, the frame for the tool workspace is not closed
getting workspace info gets the user's entire metadata from the server, perhaps this should be cached
	or only parts of the metadata downloaded -- UPDATE: workspace info is obsolete and will be removed.
setting the needs attention status or new information status on a tool has no effect (but it works on workspaces)
if a lot of messages are being sent and a user's metadata is requested, an incorrect value could be returned.
	this is because, assume that the getUserMetadata() method sends it's request for the user's metadata, then waits 5 seconds.
	after this time has passed, it will send another request, thinking it must have missed the response. now say that the first
	response finally makes it through, and is returned to the user. another user's metadata is then requested. the second response
	to the initial request comes through, and the first user's metadata is returned, while the metadata returned should have
	been the second user's.
workspaces can only be added or deleted when the user is online, they should be able to create them when they are offline
with MultiplayerSequenceGame, the join button is not disabled if the number of players is the max
MultiplayerSequenceGames do not let the players play in the order they joined, like they should
there is no way for the game, when calling createPlayerMetadata, to cancel the request to join in MultiplayerSequenceGame
MultiplayerSequenceGames cannot update their player metadata during the game, for example, to display another player's score
the user is not asked to confirm when they delete a tool
features cannot tell if they are installed on another user's computer
need to implement notifying features when a user's status changes (userStatusChanged() is not called right now)


SERVER ISSUES:

listownedworkspaces is not implemented
listworkspaces is not implemented


*=solved