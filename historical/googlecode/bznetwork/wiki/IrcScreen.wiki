BZNetwork can connect to a particular IRC channel as a particular user and send notifications when certain events occur. This page describes a bunch of stuff related to that.

Multiple IRC bots can be created. Each bot has a nickname, a server, a port, and optionally a password. 

There needs to be some way to specify which servers (or groups or global) to log for, and a way to specify the messages that are logged. Maybe have something called "messages", which you add a message, which specifies the target (global, a group, or a server), a log event type, and the message that should be sent (which can include %something% variables representing data for that message). You could then create as many messages as you want for an IRC bot. Some sort of memory caching of a bot's current settings would need to be used, as it would be unfeasible to query the database for the list of messages every time a new log event happens. Another thing that could be used is that when the IRC bot is started, it loads its message set from the database and stores it in a set of hash maps or something. When a change to the bot's message set occurs, the server reloads the entire message set.

So this seems to merit two tables, ircbots and ircmessages. IRC bots would have an id, nick, server, port, and password, and irc messages would have an id, a bot id, a target, a log event type, and a message to send. The bot, when loaded, stores a hash map which maps combinations of servers/groups/global and log event types to a list of messages that correspond to that criteria. When a log event occurs, the read thread adds a runnable to a thread pool executor that takes the event's data and tries to find any bots that might need that data. It then sends the data to those bots.

Bots should reconnect if they are disconnected. In the future, I might let bots also respond to people, and maybe authenticate people off of hostmask. For now, though, that's beyond the scope. The bot should, however, respond to the help command with something indicating the url of the bznetwork instance that it's located at. It should probably also issue a join message.