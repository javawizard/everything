MORE MEANINGLESS RAMBLE FROM ME ABOUT TOOL WORKSPACES

the chat tool in the tool workspaces is used for exchanging chat messages between users of the workspace.
the user can configure how many chat messages to cache, and therefore to display. they can also choose how many
messages to store to the filesystem cache. in the future, there will be a button or something for reading previous messages
that are not displayed (because they are past the user specified limit for displaying but not for FS caching). anyway,
they can choose how many are shown in the text area, and how many are cached on the FS. when the option comes to view past messages,
they will be able to choose a specific day to view messages for, and if there is too many for that day to view at
once (because of a potential OutOfMemoryError), it will allow them to view messages in groups of n.
anyway, the defaults are 500 for displaying and 15000 for FS caching.

each chat message has an id, which is the server time, a hyphen, and the user who created the message. then it has the message itself.
the message can be formatted using any html text, but SHOULD NOT start with <html>. it needs to be ina suitable format
for parsing, with surrounding HTML tags, by a JEditorPane. a JEditorPane is used to display all chat messages. when a user enters a chat
message, and then clicks "go" or hits the enter key on their keyboard, the chat message is sent. currently, specific formatting is
not supported, although the user may choose in their preferences to display each message color-coded to the user who sent it.
these color codes may end up different for each user, for example, Alex Boyd may appear red on Mark Boyd's computer, but appear
green on Matt Davis's computer. when this option is selected, a color code IS NOT sent with a message, rather, the receiving
workspace wraps the message with a <font color="THE_COLOR_HERE"> tag. the user cannot select which colors to use, they are fixed.
the first user (as returned from Workspace.getAllUsers()) is red, the second is yellow (slighly darker than 255,255,0 to preserve
visibility), etc. the list of colors used as of the writing of this document is as follows:

dark red
dark yellow
dark green
dark blue
dark purple
dark cyan
dark orange
light red
light green
light blue
light purple
light cyan
light orange
light yellow

if there are more users than this, the list repeats, but with the text bold. if there are even more users than this, the list repeats,
but with the text italic. if there are more users than this (that would be 43 or more users), then you have too many users
in your workspace, and you should get organized and create another workspace :) . actually, the cycle just repeats.
 in the future, this will be message-creator
configurable, meaning that you can choose how your messages appear in everyone else's window. anyway, your username, a colon,
then in light gray on the same line, the date and time (user configurable, defaults to "MM/dd/yyyy hh:mm aa" without the quotes, settings
are in a format acceptable for passing to SimpleDateFormat), and then a newline, then the user's message, then 2 newlines (so as to leave
a blank line to separate messages) are added to the window for each chat message received. the message is stored in mchat folder,
as the id of the message for the name of the file, and the message itself as the value.

any workspace messages that have to do with chat should start with chat| and then whatever. any workspace messages that have to do with
a workspace tool (usually message exchanged between tools in much the same way that workspaces exchange messages) start with
tool|TOOL_ID| and then whatever. i'll get back to the stuff about tools later. anyway, about chat. if you receive a message that
starts with chat|message|MESSAGE_ID|MESSAGE_TEXT this means that there is a message from a user. if the user specified in the message's
id does not match the user that the message is from, the message should be discarded. THIS MUST BE CHECKED. anyway, if the message
starts with chat|messagecount, then the number of messages stored in the FS should be sent in response. if the message starts with
chat|messagelist|OFFSET|LIMIT, then it should reply with chat|messagelistreply| and then each message's id within that range seperated by
a comma. this should be used to check if another workspace knows about a chat message that this one doesn't probably because this workspace
was offline when the message was sent. if chat|messageget|MESSAGE_ID is received, then chat|messagegetresponse|MESSAGE_ID|MESSAGE_TEXT
should be sent as a reponse if that message id exists in the FS, chat|messagegetresponse|NOMESSAGE if not.

anyway, on to tools. i will talk more about chat later.

