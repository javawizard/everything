This document describes all of the tables that the realm server uses in it's database.


These tables reside in the persistant database:


webusers:

This table contains the users that can manage this realm server from the web. This is entirely unrelated to the OpenGroove users registered to this realm server.

username varchar(64) The user's username
role varchar(32) The role of this user. Currently only admin is allowed.
password varchar(200) The hex representation of the SHA-512 of the password for this user



configuration:

This table holds general configuration of the server, such as whether or not registration is open, This server's name and description in the OpenGroove realm server directory, etc.

name varchar(64) The name of this configuration setting
value varchar(1024) The value of this configuration setting



users:

This table holds the users that are signed up with this realm server.

username varchar(64) The username of this user.
password varchar(200) The hex representation of the SHA-512 of the password for this user. It should only need to be 128 chars long but it's longer just in case.
publiclylisted boolean true if the user should be listed in the public directory (in which case results from searchusers could return this user as a result), false otherwise.



userquotas:

This table holds the quotas that apply to a user.

key varchar(32) the name of the quota
value int the value of the quota



usersettings:

This table holds settings that a user specifies. A user can set settings for their account to allow multiple computers to be able to download this information. Settings who's name start with public- can be viewed (but not edited) by anyone, and all other settings can only be viewed and edited by the user themselves. A user cannot have more than 256KB of settings (this does not include individual computer settings) This includes a 64-byte overhead for each setting, the length of the key, and the length of the value.

username varchar(64) The username of the user that this setting is for
name varchar(64) The name of this particular setting
value varchar(2048) The value of this setting



computersettings:

This table holds settings similar to usersettings, but the settings are computer-specific. When a setting is created, the computer that created it is marked as the owner of the setting. Any other computer of that user can modify the setting if it knows the name of the computer. Setting names of this type do not need to be unique across all of the user's settings. A computer can only have 16KB of settings, using the same spec as the usersettings table. A user is only able to create 8 computers by default; this can be configured using the web ui.

username varchar(64) The username of the user that owns the computer that the setting is for
computername varchar(64) The name of the computer that created this setting
name varchar(64) The name of this setting
value varchar(2048) The value of this setting



computers:

This table holds the computers that are registered for each user.

username varchar(64) The username of the user that this computer is registered to
computername varchar(64) The name of this computer
type varchar(32) The type of computer. When a computer is created, it's type is specified, and it's type cannot change thereafter. Currently, the valid types are pc (the normal OpenGroove Client), pda (for OpenGroove PDA clients), mobile (for OpenGroove mobile clients, these run on mobile phones and have an extremely reduced interface), and web (if a user signs on to their account using the web interface. only one user of this type is usually created).
lastonline bigint the time that this computer was last online, in milliseconds since january 1, 1970 utc



subscriptions:

This table holds the list of subscriptions that users have created.

type varchar(64) the type of subscription.
username varchar(64) the username of the user who created this subscription.
onusername varchar(64) the username, or userid if the user is not of this realm server, of the user who's changes are to be subscribed to. If the subscription type is not for a particular user, then this is the empty string.
properties varchar(1024) the properties of this subscription, specific to the subscription type, in the properties file format.



imessagequotas

This table contains the quotas applied by a user on how many imessages may be received from another user.

username varchar(64) the username of the user that has applied the quota
onusername varchar(64) the username or userid (if the user is not of this realm server) that the quota applies to
messagecount int the number of messages per minute that onusername can send to username



These tables reside in the large database:


storedmessages:

This table holds the list of stored messages that are queued on this realm server right now. It doesn't actually contain the message data (except for the message's metadata, which is limited to 1024 characters total), which is stored in the large database table storedmessagedata.

id varchar(128) The id of the message. It's recommended that this start with the userid of the sender of the message, to avoid message id collisions.
sender varchar(64) The username (or userid if the message is from a user not on this realm server) of the message's sender.
recipient varchar(64) The username (or userid if the message is for a user not on this realm server) of the message's intended recipient.
fromcomputer varchar(64)  The name of the computer that sent this message, the empty string if unavailable
tocomputer varchar(64) The name of the computer that the message is intended for, the empty string to indicate that it's for all computers of the user specified. If a target computer is specified, all computers of that user will still have access to the message, but they can see that the message is not directly intended for them, and the message will be deleted if the intended computer soft-deletes it instead of requiring all online computers of that user to soft-delete it.
maxchunks int The maximum number of chunks that will be in this message. This is used for space allocation.
maxchunksize int The maximum chunk size, in bytes, for all chunks that will be in this message. This is used for space allocation.
lifecycle int The message's current lifecycle status.
lifecycleprogress int for lifecycle statuses that have a total progress amount so far, this is the progress so far.
lifecycletotal int for lifecycle statuses that have a total progress amount so far, this is the progress level at which the task will be complete.
needslifecycleupdate boolean true if info about the current lifecycle has changed and updates need to be sent to the sender of the message.
finalized boolean True if the message is finalized, false if it is not. If a message is finalized, this means that the complete contents of the message have been uploaded and the message is ready to be sent off on it's way, or, if the recipient is on this realm server and the sender is not, that the message has been downloaded from the sending realm server and is available for download.
approved boolean true if the user has approved the message for receiving, false if they haven't. If the message is from this realm server, then the message is counted towards the sender's message quota until approved it set to true by the receiver, at which point it's counted towards the receiver's quota. If the message is not from this realm server, and if this realm server is the sending realm server, then this is set to true when the receiving realm server tells this realm server that it is willing to receive the message now. If the message is not from this realm server, and if this realm server is the receiving realm server, this is set to true when the recipient of the message approves it, at which point the message can be downloaded from the sending realm server.
metadata varchar(4096) the metadata of the message, in the format of Properties.store().



softdeletes

This table stores when a computer soft-deletes a particular message.

id varchar(128) the id of the message, from which, using the stored messages table, the username can be derived
computer varchar(64) the name of the computer that has soft-deleted this message



storedmessagedata:

This table holds the actual contents of stored messages.

id varchar(128) The id of the message that this data is for.
block int The block number of this particular data chunk. Usually, block numbering starts at 0, and increments by one for each successive block. However, this is not required. The blocks of the message are assembled in ascending order, but that is the only constraint on block numbering.
contents blob The actual contents of this block. The contents should be no larger than 64KB.















