package net.sf.opengroove.client.dynamics;

/**
 * This class is used to make changes to an engine. An EngineWriter is obtained
 * from the engine, and is used to make modifications to the engine. When all
 * modifications have been made to the writer, finish() should be called.
 * getDelta() can then be called to obtain the resulting delta, which can be
 * applied to the engine by calling apply() on the engine.
 * 
 * @author Alexander Boyd
 * 
 */
public abstract class EngineWriter
{
    /**
     * Indicates to the engine writer that the accessor is done writing to it.
     * Any methods that write to it should throw an IllegalStateException after
     * this is called. In addition, the date that this is called should be
     * marked as the date for the resulting delta that can be taken from this
     * writer.
     */
    public void finish();
    
    /**
     * Returns this writer's delta. This throws an IllegalStateException if
     * finish() has not been called yet. If it has, then this method returns the
     * delta generated by it, which can then be passed
     * 
     * @return
     */
    public Delta getDelta();
}
