Each class (actually an interface but I'm calling it a class here for some random reason) in the object hierarchy has a table, who's name is it's non-qualified class name. For example, a class called net.sf.opengroove.client.storage.Contact would have it's objects stored in the table "contact". This can be changed by annotating the class with the @Table annotation.

For each bean property on the class where the getter is annotated with @Property, there is a column in the table. If the value of the property is null, then the column's value is null. For java primitive types, a null value will be converted to 0 on a read, so there usually will not be a null value in a primitive column. For primitives, the type of the column corresponds to the type of the primitive. If a property is a Java long and the getter is annotated with @DateColumn, then the value will be stored as a Timestamp instead of as an int8. For strings, the type of the column is a varchar(1024), unless the length is specified in an @Length annotation, in which case the length is the length specified. For collections, 